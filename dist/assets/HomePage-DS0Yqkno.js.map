{"version":3,"file":"HomePage-DS0Yqkno.js","sources":["../../src/components/SydrixLogo/SydrixLogo.tsx","../../src/components/Section/HeroSection/HeroSection.tsx","../../src/components/Section/BenefitsSection/BenefitsSection.tsx","../../src/components/Section/ContactsSection/ContactsSection.tsx","../../src/hooks/useShowTopButton.ts","../../src/components/FullPageSlider/FullPageSlider.tsx","../../src/pages/HomePage/HomePage.tsx"],"sourcesContent":["import React from 'react';\r\nimport { LangCode, LangData } from '@/types/langTypes';\r\nimport styles from './SydrixLogo.module.css';\r\n\r\ntype TranslateFn = <K extends keyof LangData>(key: K) => LangData[K];\r\n\r\ninterface LogoProps {\r\n  t: TranslateFn;\r\n  language: LangCode;\r\n}\r\n\r\nconst SydrixLogo: React.FC<LogoProps> = ({ t, language }) => {\r\n  const { top, bottom } = t('logoTaglines');\r\n\r\n  return (\r\n    <div\r\n      className={styles.logo}\r\n      role=\"img\"\r\n      aria-label={`SYDRIX logo, language ${language.toUpperCase()}`}\r\n      tabIndex={-1}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 320 160\"\r\n        className={styles.svgLogo}\r\n        aria-hidden=\"true\"\r\n        focusable=\"false\"\r\n        style={{\r\n          pointerEvents: 'none',\r\n          userSelect: 'none',\r\n        }}\r\n      >\r\n        <defs>\r\n          <linearGradient id=\"grad\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n            <stop offset=\"0%\" className={styles.stop1} />\r\n            <stop offset=\"50%\" className={styles.stop2} />\r\n            <stop offset=\"100%\" className={styles.stop3} />\r\n          </linearGradient>\r\n        </defs>\r\n\r\n        {/* Верхній слоган */}\r\n        <text\r\n          x=\"50%\"\r\n          y=\"35%\"\r\n          className={styles.tagline}\r\n          fill=\"url(#grad)\"\r\n        >\r\n          {top}\r\n        </text>\r\n\r\n        {/* Основний напис SYDRIX */}\r\n        <text\r\n          x=\"50%\"\r\n          y=\"60%\"\r\n          className={styles.brand}\r\n          fill=\"url(#grad)\"\r\n          style={{ filter: 'drop-shadow(2px 2px 2px rgba(0,0,0,0.3))' }}\r\n        >\r\n          <tspan>S</tspan>\r\n          <tspan className={styles.mid}>YDRI</tspan>\r\n          <tspan>X</tspan>\r\n        </text>\r\n\r\n        {/* Нижній слоган */}\r\n        <text\r\n          x=\"50%\"\r\n          y=\"85%\"\r\n          className={styles.tagline}\r\n          fill=\"url(#grad)\"\r\n        >\r\n          {bottom}\r\n        </text>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SydrixLogo;\r\n","// ✅ src/components/HeroSection.tsx\r\nimport SydrixLogo from '../../SydrixLogo/SydrixLogo';\r\nimport styles from './HeroSection.module.css';\r\nimport { useLanguageContext } from '@/context/LanguageProvider';\r\n\r\ninterface HeroSectionProps {\r\n  theme: 'light' | 'dark';\r\n}\r\n\r\nexport default function HeroSection({ theme }: HeroSectionProps) {\r\n  const { lang, t } = useLanguageContext();\r\n\r\n  const handleContactClick = () => {\r\n    const contactSection = document.getElementById('contact');\r\n    if (contactSection) {\r\n      contactSection.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <header className={`${styles.header} ${styles[theme]}`}>\r\n      <h1 className={styles.title}>{t('heroTitle')}</h1>\r\n\r\n      <div className={styles.topRow}>\r\n        <SydrixLogo t={t} language={lang} />\r\n      </div>\r\n\r\n      <div className={styles.subtitleWrapper}>\r\n        {Array.isArray(t('heroSubtitle')) &&\r\n          t('heroSubtitle').map((line, idx) => (\r\n            <p key={idx} className={styles.line}>\r\n              {line}\r\n            </p>\r\n          ))}\r\n      </div>\r\n\r\n      <div className={styles.buttonWrapper}>\r\n        <button className={styles.button} onClick={handleContactClick}>\r\n          {t('contactsButtonText')}\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport type { BenefitItem, TFunction } from '@/types/langTypes';\r\nimport type { LangData } from '@/types/langTypes';\r\nimport styles from './BenefitsSection.module.css';\r\n\r\nexport interface BenefitsProps {\r\n  benefits: BenefitItem[];\r\n  title: keyof LangData;\r\n  showAllButton: keyof LangData;\r\n  theme: 'light' | 'dark';\r\n  t: TFunction;\r\n}\r\n\r\nconst BenefitsSection: React.FC<BenefitsProps> = ({\r\n  benefits,\r\n  title,\r\n  showAllButton,\r\n  theme,\r\n  t,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const previewBenefits = benefits.slice(0, 5);\r\n\r\n  const handleNavigate = (benefitId?: string) => {\r\n    navigate(benefitId ? `/services#${benefitId}` : '/services');\r\n  };\r\n\r\n  const renderTranslation = (\r\n    value:\r\n      | string\r\n      | BenefitItem[]\r\n      | string[]\r\n      | { label: string; value: string }[]\r\n      | React.ReactNode[]\r\n      | { top: string; bottom: string }\r\n      | undefined\r\n  ): React.ReactNode => {\r\n    if (!value) return null;\r\n    if (typeof value === 'string') return value;\r\n    // Handle { top, bottom } object\r\n    if (\r\n      typeof value === 'object' &&\r\n      !Array.isArray(value) &&\r\n      value !== null &&\r\n      'top' in value &&\r\n      'bottom' in value\r\n    ) {\r\n      return (\r\n        <>\r\n          <span>{(value as { top: string; bottom: string }).top}</span>\r\n          <br />\r\n          <span>{(value as { top: string; bottom: string }).bottom}</span>\r\n        </>\r\n      );\r\n    }\r\n    if (Array.isArray(value)) {\r\n      // If it's an array of strings or React nodes, render as before\r\n      if (value.every(item => typeof item === 'string' || React.isValidElement(item))) {\r\n        return value.map((line, index) => (\r\n          <React.Fragment key={index}>\r\n            {line}\r\n            <br />\r\n          </React.Fragment>\r\n        ));\r\n      }\r\n      // If it's an array of objects with label/value or BenefitItem, render their labels/titles\r\n      if (value.length > 0 && typeof value[0] === 'object' && value[0] !== null) {\r\n        // Handle { label, value }[]\r\n        if ('label' in value[0]) {\r\n          return (value as { label: string; value: string }[]).map((item, idx) => (\r\n            <React.Fragment key={idx}>\r\n              {item.label}\r\n              <br />\r\n            </React.Fragment>\r\n          ));\r\n        }\r\n        // Handle BenefitItem[]\r\n        if ('title' in value[0]) {\r\n          return (value as BenefitItem[]).map((item, idx) => (\r\n            <React.Fragment key={idx}>\r\n              {item.title}\r\n              <br />\r\n            </React.Fragment>\r\n          ));\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <section\r\n      className={`${styles.benefitsSection} ${styles[theme]}`}\r\n      aria-labelledby=\"benefits-title\"\r\n    >\r\n      <h2 id=\"benefits-title\" className={styles.sectionTitle}>\r\n        {renderTranslation(t(title))}\r\n      </h2>\r\n\r\n      <ul className={styles.benefitsList}>\r\n        {previewBenefits.map(({ id, icon: Icon, title }) => (\r\n          <li\r\n            key={id}\r\n            className={styles.benefitItem}\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={() => handleNavigate(id)}\r\n            onKeyDown={(e) => {\r\n              if (e.key === 'Enter' || e.key === ' ') {\r\n                e.preventDefault();\r\n                handleNavigate(id);\r\n              }\r\n            }}\r\n            aria-label={title}\r\n          >\r\n            {Icon && <Icon className={styles.icon} aria-hidden=\"true\" />}\r\n            <h3 className={styles.benefitTitle}>{title}</h3>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <button\r\n        onClick={() => handleNavigate()}\r\n        className={styles.showAllButton}\r\n        aria-label={t(showAllButton) as string}\r\n        type=\"button\"\r\n      >\r\n        {renderTranslation(t(showAllButton))}\r\n      </button>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BenefitsSection;\r\n","import React from 'react';\r\nimport styles from './ContactsSection.module.css';\r\nimport useLanguage from '@/hooks/useLanguage';\r\n\r\nexport interface ContactsSectionProps {\r\n  phone?: string;\r\n  email?: string;\r\n  portfolioLink?: string;\r\n  theme: 'light' | 'dark';\r\n}\r\n\r\nconst ContactsSection: React.FC<ContactsSectionProps> = ({ phone, email, portfolioLink, theme }) => {\r\n  const { t } = useLanguage();\r\n\r\n  const contactItems = [\r\n    phone && {\r\n      label: t('phone'),\r\n      value: phone,\r\n      href: `tel:${phone}`,\r\n      aria: `${t('phone')}: ${phone}`,\r\n    },\r\n    email && {\r\n      label: t('email'),\r\n      value: email,\r\n      href: `mailto:${email}`,\r\n      aria: `${t('email')}: ${email}`,\r\n    },\r\n    portfolioLink && {\r\n      label: t('portfolioLabel'),\r\n      value: t('goTo'),\r\n      href: portfolioLink,\r\n      aria: `${t('goTo')} ${t('portfolioLabel')}`,\r\n      external: true,\r\n    },\r\n  ].filter(Boolean) as {\r\n    label: string;\r\n    value: string;\r\n    href: string;\r\n    aria: string;\r\n    external?: boolean;\r\n  }[];\r\n\r\n  return (\r\n    <section \r\n      id=\"contact\"\r\n      className={`${styles.section} ${theme}`}\r\n      aria-labelledby=\"contacts-heading\"\r\n    >\r\n      <h2 id=\"contacts-heading\" className={styles.title}>\r\n        {t('contactsTitle')}\r\n      </h2>\r\n\r\n      <ul className={styles.list}>\r\n        {contactItems.map(({ label, value, href, aria, external }, index) => (\r\n          <li key={label + index} className={styles.item}>\r\n            <span className={styles.label}>{label}:</span>{' '}\r\n            <a\r\n              href={href}\r\n              target={external ? '_blank' : undefined}\r\n              rel={external ? 'noopener noreferrer' : undefined}\r\n              aria-label={aria}\r\n              className={styles.link}\r\n            >\r\n              {value}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ContactsSection;\r\n","import { useState, useEffect, RefObject } from 'react';\r\n\r\nexport function useShowTopButton(ref: RefObject<HTMLDivElement | null>): boolean {\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const el = ref.current;\r\n    if (!el) return;\r\n\r\n    const onScroll = () => {\r\n      setShow(el.scrollTop > window.innerHeight);\r\n    };\r\n\r\n    el.addEventListener('scroll', onScroll, { passive: true });\r\n    return () => el.removeEventListener('scroll', onScroll);\r\n  }, [ref]);\r\n\r\n  return show;\r\n}\r\n","// src/components/FullPageSlider/FullPageSlider.tsx\r\nimport React, { useRef, useCallback, KeyboardEvent, useMemo } from 'react';\r\nimport HeroSection from '../Section/HeroSection/HeroSection';\r\nimport BenefitsSection from '@/components/Section/BenefitsSection/BenefitsSection';\r\nimport PortfolioSection from '@/components/Section/PortfolioSection/PortfolioSection';\r\nimport ContactsSection from '../Section/ContactsSection/ContactsSection';\r\nimport styles from './FullPageSlider.module.css';\r\nimport { FaArrowUp } from 'react-icons/fa';\r\nimport { LangData } from '@/types/langTypes';\r\nimport { useShowTopButton } from '@/hooks/useShowTopButton';\r\n\r\ntype TranslateFn = <K extends keyof LangData>(key: K) => LangData[K];\r\n\r\ninterface FullPageSliderProps {\r\n  t: TranslateFn;\r\n  theme: 'light' | 'dark';\r\n  onContact: () => void;\r\n}\r\n\r\nconst FullPageSlider: React.FC<FullPageSliderProps> = ({ t, theme, onContact }) => {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Показ кнопки \"назад нагору\" після деякого прокручування вниз\r\n  const showTopBtn = useShowTopButton(containerRef);\r\n\r\n  // Плавна прокрутка до верху\r\n  const scrollToTop = useCallback(() => {\r\n    containerRef.current?.scrollTo({ top: 0, behavior: 'smooth' });\r\n  }, []);\r\n6\r\n  // Обробка клавіш для доступності\r\n  const handleKeyDown = useCallback(\r\n    (e: KeyboardEvent<HTMLDivElement>) => {\r\n      if (['Home', 'PageUp', 'ArrowUp'].includes(e.key)) {\r\n        e.preventDefault();\r\n        scrollToTop();\r\n      }\r\n    },\r\n    [scrollToTop]\r\n  );\r\n\r\n  const portfolioItems = useMemo(\r\n    () => [\r\n      {\r\n        id: 'portfolio-1',\r\n        name: 'Portfolio CV Site',\r\n        title: t('portfolioTitle'),\r\n        link: t('portfolioLink'),\r\n        altText: 'Portfolio CV Site',\r\n        images: [\r\n          '/portfolio/project1.webp',\r\n          '/portfolio/project2.webp',\r\n          '/portfolio/project3.webp',\r\n          '/portfolio/project4.webp',\r\n          '/portfolio/project5.webp',\r\n          '/portfolio/project6.webp',\r\n        ],\r\n      },\r\n    ],\r\n    [t]\r\n  );\r\n  // Клас теми для контейнера\r\n  const themeCls = theme === 'light' ? styles.light : styles.dark;\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className={`${styles.snapContainer} ${themeCls}`}\r\n      tabIndex={0}\r\n      aria-label=\"Full page scroll container\"\r\n      onKeyDown={handleKeyDown}\r\n    >\r\n      {/* Hero Section */}\r\n      <section className={styles.snapSection} aria-labelledby=\"hero-heading\">\r\n        <HeroSection theme={theme} />\r\n      </section>\r\n\r\n      {/* Benefits */}\r\n      <section className={styles.snapSection} aria-labelledby=\"benefits-heading\">\r\n        <BenefitsSection\r\n          title={'benefitsTitle'}\r\n          benefits={t('benefits')}\r\n          showAllButton={'showAllButton'}\r\n          theme={theme}\r\n          t={t}\r\n        />\r\n      </section>\r\n\r\n      {/* Portfolio */}\r\n      <section className={styles.snapSection} aria-labelledby=\"portfolio-heading\">\r\n        <PortfolioSection\r\n          portfolioItems={portfolioItems}\r\n          t={t}\r\n          theme={theme}\r\n          onOpen={(id: string) => {\r\n            // Implement your logic here, e.g., open a modal or navigate\r\n            console.log('Open portfolio item:', id);\r\n          }}\r\n        />\r\n      </section>\r\n\r\n      {/* Contacts */}\r\n      <section className={styles.snapSection} aria-labelledby=\"contacts-heading\">\r\n        <ContactsSection\r\n          phone={t('phone')}\r\n          email={t('email')}\r\n          portfolioLink={t('portfolioLink')}\r\n          theme={theme}\r\n        />\r\n      </section>\r\n\r\n      {/* Кнопка \"назад нагору\" */}\r\n      {showTopBtn && (\r\n        <button\r\n          className={styles.topButton}\r\n          onClick={scrollToTop}\r\n          aria-label=\"Back to top\"\r\n          type=\"button\"\r\n        >\r\n          <FaArrowUp aria-hidden=\"true\" />\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullPageSlider;\r\n","import FullPageSlider from '@/components/FullPageSlider/FullPageSlider';\r\nimport { LangData } from '@/types/langTypes';\r\n\r\ninterface Props {\r\n  t: <K extends keyof LangData>(key: K) => LangData[K];\r\n  theme: 'light' | 'dark';\r\n}\r\n\r\nexport default function HomePage({ t, theme }: Props) {\r\n  const handleContact = (): void => {\r\n    const email = t('email');\r\n    if (typeof email === 'string') {\r\n      window.location.href = `mailto:${email}`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FullPageSlider t={t} theme={theme} onContact={handleContact} />\r\n  );\r\n}\r\n"],"names":["SydrixLogo","t","language","top","bottom","jsx","styles","jsxs","HeroSection","theme","lang","useLanguageContext","handleContactClick","contactSection","line","idx","BenefitsSection","benefits","title","showAllButton","navigate","useNavigate","previewBenefits","handleNavigate","benefitId","renderTranslation","value","Fragment","item","React","index","id","Icon","e","ContactsSection","phone","email","portfolioLink","useLanguage","contactItems","label","href","aria","external","useShowTopButton","ref","show","setShow","useState","useEffect","el","onScroll","FullPageSlider","onContact","containerRef","useRef","showTopBtn","scrollToTop","useCallback","handleKeyDown","portfolioItems","useMemo","themeCls","PortfolioSection","FaArrowUp","HomePage","handleContact"],"mappings":"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"}